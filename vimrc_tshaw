let g:jsx_ext_required = 0

let g:ale_fixers = {
\ 'javascript': ['eslint']
\ }
let g:ale_linters = {
\ 'javascript': ['prettier-eslint', 'eslint'],
\ }
"let g:ale_sign_error = '❌'
"let g:ale_sign_warning = '⚠️'
let g:ale_fix_on_save = 1
let g:ale_javascript_prettier_use_local_config = 1
let g:user_emmet_leader_key=','
highlight ALEErrorSign ctermbg=NONE ctermfg=red
highlight ALEWarningSign ctermbg=NONE ctermfg=yellow


"Mostrar tabs
set list
"set listchars=tab:>-,trail:.
set listchars=tab:>.,trail:-
"Bajar el timeout del doble tecla
"set timeout timeoutlen=150

"set selectmode=mouse

"Intent
set autoindent
set smartindent
"set cindent

"Enable Syntax
syntax enable
colorscheme default
set background=dark

"BackSpace
set backspace=indent,eol,start

" plugins por tipo de archivo
filetype plugin on
filetype indent on

" busqueda incremental (a medida que se escribe)
set incsearch
set ruler
set joinspaces
set showmatch
set showcmd
set timeout timeoutlen=150
set wildmenu
set wildmode=list:longest
set tabstop=4
set softtabstop=4
set shiftwidth=4
set mouse=

set number

" resulados de busquedas resaltados
set hlsearch

"permite foldear funciones con za y zc en funcion de la sintaxis
"set foldmethod=indent
"set foldopen=all

if has("autocmd")
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
endif

map <F2> :NERDTreeToggle <CR>
map <C-l> :tabn <CR>
map <C-h> :tabp <CR>
map <C-n> :tabnew <CR>
map <C-1> :tabm 1<CR>
map <C-2> :tabm 2<CR>
map <C-3> :tabm 3<CR>
map <C-4> :tabm 4<CR>
map <C-5> :tabm 5<CR>
map <C-6> :tabm 6<CR>
map <C-7> :tabm 7<CR>
map <C-8> :tabm 8<CR>
map <C-9> :tabm 9<CR>
map <space> /
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
map <F8> <Plug>(ale_fix)
map <F7> <Plug>(ale_toggle)
vnoremap < <gv
vnoremap > >gv

""folding para javascript
"augroup javascript_folding
"	au!
"	au FileType javascript setlocal foldmethod=syntax
"augroup END

set ic
set smartcase
let g:gitgutter_async=0
setlocal iskeyword-=:
